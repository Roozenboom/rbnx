import type { Options } from '@wdio/types'

export const wdioConfig: Options.Testrunner = {
  //
  // ======================
  //  Runner Configuration
  // ======================
  runner: "<%= runner %>",
  //
  // ==============
  //  Capabilities
  // ==============
  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same
  // time. Depending on the number of capabilities, WebdriverIO launches several test
  // sessions.  
  //  
  maxInstances: 10,
  capabilities: [{
    browserName: 'chrome',
    acceptInsecureCerts: true
  }],
  // Running a headless browser means to run a browser instance without window or UI. 
  // This is mostly used within CI/CD environments where no display is used.
  headless: false,
  //
  // =====================
  //  Test Configurations
  // =====================
  // Define all options that are relevant for the WebdriverIO instance here
  //
  // Level of logging verbosity: trace | debug | info | warn | error | silent
  logLevel: "error",
  //
  // If you only want to run your tests until a specific amount of tests have failed use
  // bail (default is 0 - don't bail, run all tests).
  bail: 0,
  //
  // The number of times to retry the entire specfile when it fails as a whole
  // specFileRetries: 1,
  //
  // Delay in seconds between the spec file retry attempts
  // specFileRetriesDelay: 0,
  //
  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue
  // specFileRetriesDeferred: false,
  //
  // Default timeout for all waitFor* commands.
  waitforTimeout: 10000,
  //
  // Default timeout in milliseconds for request
  // if browser driver or grid doesn't send response
  connectionRetryTimeout: 120000,
  //
  // Default request retries count
  connectionRetryCount: 3,
  //
  // =========================
  //  Framework Configuration
  // =========================
  // Framework you want to run your specs with.
  // The following are supported: Mocha, Jasmine, and Cucumber
  // see also: https://webdriver.io/docs/frameworks
  //
  // Make sure you have the wdio adapter package for the specific framework installed
  // before running any tests.
  framework: "<%= framework %>",<% 
  if (framework === 'mocha') { %>
  //
  // Options to be passed to Mocha.
  // See the full list at http://mochajs.org/
  mochaOpts: {
    ui: 'bdd',
    timeout: 60000
  },<% 
  } else if (framework === 'jasmine') { %>
  //
  // Options to be passed to Jasmine.
  jasmineOpts: {
    // Jasmine default timeout
    defaultTimeoutInterval: 60000,
  },<% } %><% 
  if (services.length) { %>
  //
  // ========================
  //  Services Configuration
  // ========================
  // Test runner services
  // Services take over a specific job you don't want to take care of. They enhance
  // your test setup with almost no effort. Unlike plugins, they don't add new
  // commands. Instead, they hook themselves up into the test process.
  services:  [<%  for (let service of services){ %>'<%= service %>',<% } %>],
  <% } %><% 
  if (reporters.length) { %>
  //
  // ========================
  //  Reporter Configuration
  // ========================
  // Test reporter for stdout.
  // The only one supported by default is 'dot'
  // see also: https://webdriver.io/docs/dot-reporter
  reporters: [<%  for (let reporter of reporters){ %>'<%= reporter %>',<% } %>],
  <% } %>
};
